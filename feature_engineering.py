import json
import os
import pickle
import matplotlib.pyplot as plt


def get_feat_dict():
    with open("All_Windows_API.json", "r") as f:
        data = json.load(f)
    all_api = data["exports"]
    print(f"The length of the feature dictionary is: {len(all_api)}")
    return all_api


def get_api_sequence(groups):
    for g in groups:
        reports = os.listdir("Cuckoo Report/" + g)
        for rep in reports:
            print(rep)
            api_seq = []
            path = "Cuckoo Report/" + g + "/" + rep
            with open(path, 'r') as f:
                data = json.load(f)
            processes = data["behavior"]["processes"]
            if isinstance(processes, dict):
                processes = [processes]
            for p in processes:
                calls = p["calls"]
                for call in calls:
                    api = call["api"]
                    api_seq.append(api)
            with open("API Sequence/" + g + "/" + rep.replace("json", "pkl"), "wb") as f:
                pickle.dump(api_seq, f)


def get_max_length(groups):
    # get the max length among all the api sequence
    all_length = []
    max = 0
    for g in groups:
        files = os.listdir("API Sequence/" + g)
        for file_name in files:
            path = "API Sequence/" + g + "/" + file_name
            with open(path, 'rb') as f:
                seq = pickle.load(f)
            all_length.append(len(seq))
            if len(seq) > max:
                max = len(seq)
    print(f"The max length of the API sequence is: {max}")
    return max, all_length


def plot_feat_distribution(groups):
    _, api_lengths = get_max_length(groups)
    plt.hist(api_lengths, bins=10)
    plt.show()


if __name__ == "__main__":
    apt_groups = ["APT 1", "APT 10", "APT 21", "APT 28", "APT 29", "APT 30", "Dark Hotel", "Gorgon Group", "Winnti"]
    # feat_dic = get_feat_dict()
    # get_api_sequence(apt_groups)
    max_len, _ = get_max_length(apt_groups)
    plot_feat_distribution(apt_groups)

